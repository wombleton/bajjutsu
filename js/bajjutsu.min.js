(function(){Ext.ns("Bajjutsu"),Bajjutsu.Technique=Ext.extend(Ext.Carousel,{constructor:function(a){a==null&&(a={}),a=Ext.applyIf(a,{cls:"technique",flex:1,items:[{html:'<h1>Healing Wind Technique</h1>\n<p class="armsup"><img src="images/attack.png"/>Heals Allies</p>'},{html:'<h1>Stubborn Tortoise Technique</h1>\n<p class="armsup armsdown"><img src="images/attack.png"/><img src="images/block.png"/>Charge Shields</p>'},{html:'<h1>Fire Form Technique</h1>\n<p class="armscrossed"><img src="images/block.png"/>Damages Attackers</p>'},{html:'<h1>Void Spirit Technique</h1>\n<p class="armsup"><img src="images/attack.png"/>Drains Charge</p>'},{html:'<h1>Winding Viper Technique</h1>\n<p class="armsup"><img src="images/attack.png"/>Hurt Blockers</p>'}]});return Bajjutsu.Technique.superclass.constructor.call(this,a)}}),Ext.ns("Bajjutsu"),Bajjutsu.Charge=Ext.extend(Ext.Panel,{constructor:function(a){a==null&&(a={}),a=Ext.applyIf(a,{cls:"charge",flex:1}),Bajjutsu.Charge.superclass.constructor.call(this,a);return this.on("render",function(){this.resetCharge(!1);return this.mon(this.el,{drag:function(a){var b,c,d;b=a.absDeltaX,c=a.absDeltaY,d=a.deltaY;if(d<-10&&c/b>4)return this.setCharge(this.charge+1);if(d>10&&c/b>4)return this.setCharge(this.charge-1)},scope:this,singletap:function(){return this.setCharge(this.charge+1)},doubletap:function(){return this.resetCharge()},touchend:function(){return this.flag=!1}})})},setCharge:function(a,b){b==null&&(b=!0);if(!this.flag){b&&(this.flag=!0),a<0&&(a=0),a>3&&(a=3),this.charge=a;return this.update('<div class="badge">'+a+"</div>")}},resetCharge:function(a){a==null&&(a=!0);return this.setCharge(0,a)}}),Ext.ns("Bajjutsu"),Bajjutsu.Health=Ext.extend(Ext.Panel,{constructor:function(a){a==null&&(a={}),a=Ext.applyIf(a,{cls:"health",flex:1}),Bajjutsu.Health.superclass.constructor.call(this,a);return this.on("render",function(){this.resetHealth(!1);return this.mon(this.el,{drag:function(a){var b,c,d;b=a.absDeltaX,c=a.absDeltaY,d=a.deltaY;if(d<-10&&c/b>4)return this.setHealth(this.health+1);if(d>10&&c/b>4)return this.setHealth(this.health-1)},scope:this,singletap:function(a,b){return this.setHealth()},touchend:function(a){return this.flag=!1}})},this)},setHealth:function(a,b){a==null&&(a=this.health-1),b==null&&(b=!0);if(!this.flag){b&&(this.flag=!0),a<0&&(a=0),a>6&&(a=6),this.health=a;return this.update('<div class="badge">'+a+"</div>")}},resetHealth:function(a){a==null&&(a=!0);return this.setHealth(6,a)}}),Ext.ns("Bajjutsu"),Bajjutsu.Screen=Ext.extend(Ext.Panel,{constructor:function(a){var b,c;a==null&&(a={}),b=new Bajjutsu.Charge,c=new Bajjutsu.Health,a=Ext.applyIf(a,{dockedItems:[new Ext.Toolbar({dock:"top",items:[{xtype:"spacer"},{handler:function(){b.resetCharge(!1);return c.resetHealth(!1)},text:"Meditate",xtype:"button"}],title:"Bajjutsu Master"})],items:[{flex:1,items:[b,c],layout:{align:"stretch",type:"hbox"}},new Bajjutsu.Technique],layout:{align:"stretch",type:"vbox"}});return Bajjutsu.Screen.superclass.constructor.call(this,a)}}),Ext.setup({tabletStartupScreen:"bajjutsu.svg",phoneStartupScreen:"bajjutsu.svg",icon:"icon.png",glossOnIcon:!0,onReady:function(){return new Bajjutsu.Screen({fullscreen:!0})}})}).call(this)